names(balance_df[10])
names(balance_df[10]) <- "After Proprio"
names(balance_df)[names(balance_df)=="After_Prorio"] <- "After_Proprio"
corr_matrix <- ggcorrmat(balance_df,method = "pearson",
label = TRUE,
cor.vars = c("Age","months_mTBI","Pre_Proprio",
"Pre_Visual","Pre_Vest","Pre_Cumul",
"weeks_glasses","After_Proprio",
"After_Visual","After_Vest","After_Cumul"),
size  =2)
print(corr_matrix)
gender_plot <- ggplot(balance_df, aes(Gender, fill = Gender))+
geom_bar(width = .4)+
scale_fill_hue(c=40)+
facet_grid(vars(Glasses_FVE))+
theme_light()+
ggtitle("Barplot showing number of patients (by gender) \n wearing glasses at start of FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 24))
print(gender_plot)
gender_plot <- ggplot(balance_df, aes(Gender, fill = Gender))+
geom_bar(width = .4)+
scale_fill_hue(c=40)+
facet_grid(vars(Glasses_FVE))+
theme_light()+
ggtitle("Barplot showing number of patients (by gender) \n wearing glasses at start of FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 18))
print(gender_plot)
gender_plot <- ggplot(balance_df, aes(Gender, fill = Gender))+
geom_bar(width = .4)+
scale_fill_hue(c=40)+
facet_grid(vars(Glasses_FVE))+
theme_light()+
ggtitle("Barplot showing number of patients (by gender) \n wearing glasses at start of FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(gender_plot)
gender_plot <- ggplot(balance_df, aes(Gender, fill = Gender))+
geom_bar(width = .4)+
scale_fill_hue(c=40)+
facet_grid(vars(Glasses_FVE))+
theme_light()+
ggtitle("Barplot showing number of patients (by gender) wearing glasses at start of FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(gender_plot)
corr_matrix <- ggcorrmat(balance_df,method = "pearson", # Correlation matrix
label = TRUE,                  # assuming normality
cor.vars = c("Age","months_mTBI","Pre_Proprio",
"Pre_Visual","Pre_Vest","Pre_Cumul",
"weeks_glasses","After_Proprio",
"After_Visual","After_Vest","After_Cumul"),
title = "Correlation matrix"
size  =2)
corr_matrix <- ggcorrmat(balance_df,method = "pearson", # Correlation matrix
label = TRUE,                  # assuming normality
cor.vars = c("Age","months_mTBI","Pre_Proprio",
"Pre_Visual","Pre_Vest","Pre_Cumul",
"weeks_glasses","After_Proprio",
"After_Visual","After_Vest","After_Cumul"),
title = "Correlation matrix",
size  =2)
print(corr_matrix)
install.packages("hrbrthemes")
library(hrbrthemes)
hrbrthemes::import_roboto_condensed()
hist(age)
hist(balance_df$Age)
names(balance_df)
QQ_plots <- ggplot(balance_df, aes(Pre_Proprio))+
geom_density(aes(Pre_Proprio, y = ..density..), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(After_Proprio, y = -..density..),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(QQ_plots)
QQ_plots <- ggplot(balance_df, aes(Pre_Proprio))+
geom_density(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(After_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(QQ_plots)
proprio_density <- ggplot(balance_df, aes(Pre_Proprio))+
geom_density(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(After_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
rm(QQ_plots)
standardize <- function(x,...,na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
z-score <- apply(x,2,function(column){
avg <- mean(column)
stdev <- sd(column)
z_score <- (column - avg)/stdev
return(z_score)
})
return(z_score)
}else{
if(na.rm){
x <- x[!is.na(x)]
}
avg <- mean(x)
stdev <- sd(x)
z_score <- (x - mean(x))/sd(x)
return(z_score)
}
}
x <- seq(1:25,by .6,30)
x <- seq(1:25,by=.6,30)
x <- seq(1:25, by = .6)
x <- seq(1,25, by = .6)
standardize(x)
standardize(baance_df)
standardize(balance_df)
standardize <- function(x,...,na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
z_score <- apply(x,2,function(column){
avg <- mean(column)
stdev <- sd(column)
z_score <- (column - avg)/stdev
return(z_score)
})
return(z_score)
}else{
if(na.rm){
x <- x[!is.na(x)]
}
avg <- mean(x)
stdev <- sd(x)
z_score <- (x - mean(x))/sd(x)
return(z_score)
}
}
standardize(balance_df$Pre_Proprio)
proprio_density <- ggplot(balance_df, aes(standardize(Pre_Proprio)))+
geom_density(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(standardize(After_Proprio, y = -after_stat(density))),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(x = standardize(Pre_Proprio)))+
geom_density(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(x = standardize(After_Proprio, y = -after_stat(density))),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(proprio_density)
balance_df$zPre_Proprio <- standardize(balance_df$Pre_Proprio)
balance_df$zAfter_Proprio <- standardize(balance_df$After_Proprio)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(4.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(4.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.0,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.0,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(2.8,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(2.8,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(proprio_density)
proprio_density <- ggplot(balance_df, aes(zPre_Proprio))+
geom_density(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_density(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
print(proprio_density)
ggplot(balance_df, aes(zPre_Proprio))+
geom_histogram(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_histogram(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
ggplot(balance_df, aes(Pre_Proprio))+
geom_histogram(aes(Pre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_histogram(aes(After_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
ggplot(balance_df, aes(zPre_Proprio))+
geom_histogram(aes(zPre_Proprio, y = after_stat(density)), fill = "#69b3a2")+
geom_label(aes(3.5,.25, label = "Pre_Proprio"), color ="#69b3a2")+
geom_histogram(aes(zAfter_Proprio, y = -after_stat(density)),fill ="#404080")+
geom_label(aes(3.5,-.25, label = "After_Proprio"), color = "#404080")+
theme_ipsum()+
xlab("Proprioception measurement before and after FVE")+
theme_light()+
ggtitle("Density plot comparing Proprioception measurements before and after FVE")+
theme(plot.title=element_text(family = '', face = "italic", color ="black", size = 12))
hist(balance_df$Pre_Proprio)
qnorm(balance_df$Pre_Proprio[[83]])
qnorm(balance_df$Pre_Proprio[83])
qnorm(balance_df$Pre_Proprio[1])
qnorm(83
)
qnorm(83)
ggecdf(balance_df,"Pre_Proprio")
library(ggpubr)
ggecdf(balance_df,"Pre_Proprio")
ggecdf(balance_df,x ="Pre_Proprio")
var_mean <- as.data.frame(lapply(balance_df[,-(1:2)],round.mean <- function(x){
round(mean(x),2) # Calculating mean for all num. vars
}))
var_mean <- as.matrix(lapply(balance_df[,-(1:2)],round.mean <- function(x){
round(mean(x),2) # Calculating mean for all num. vars
}))
var_mean
var_mean <- as.matrix(lapply(balance_df[,-(1:2)],round.mean_sd_md <- function(x){
round(mean(x),2);sd(x);median(x) # Calculating mean for all num. vars
}))
var_mean <- as.matrix(lapply(balance_df[,-(1:2)],round.mean_sd_md <- function(x){
round(mean(x),2) # Calculating mean for all num. vars
}))
skewness <- function(x,...,na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
skew <- apply(x,2,function(column){
skew <- sum(column - mean(column))^3/(length(column)-1 * sd(column)^3)
return(skew)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
skew <- sum(x -mean(x)^3)/(length(x)-1 * sd(x)^3)
return(skew)
}
}
skew(x)
skewness(x)
skewness <- function(x,...,na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
skew <- apply(x,2,function(column){
skew <- sum(column - mean(column))^3/(length(column)-1 * sd(column)^3)
return(skew)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
skew <- sum(x -mean(x))^3/(length(x)-1 * sd(x)^3)
return(skew)
}
}
skewness(x)
skewness(balance_df$Pre_Proprio)
kurtosis <- function(x,..., na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
kurt <- apply(x,2,function(column){
kurtosis <- mean(column)^4/sd(column)^4
return(kurt)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
kurt <- mean(x)^4/sd(x)^4
return(kurt)
}
}
kurtosis <- function(x,..., na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
kurt <- apply(x,2,function(column){
kurtosis <- (mean(column)^4/sd(column)^4) -3
return(kurt)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
kurt <- (mean(x)^4/sd(x)^4)-3
return(kurt)
}
}
kurtosis(balance_df$Pre_Proprio)
x <- rnorm(66,20,6)
kurtosis(x)
hist(x)
20^4/6^4
kurtosis <- function(x,..., na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
kurt <- apply(x,2,function(column){
kurtosis <- ((sum(column - mean(column))^4/length(column))/sd(column)^4) -3
return(kurt)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
kurt <- ((sum(x - mean(x))^4/length(x))/sd(x)^4)-3
return(kurt)
}
}
kurtosis(x)
kurtosis <- function(x,..., na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
kurt <- apply(x,2,function(column){
kurtosis <- (((sum(column - mean(column))^4/length(column))/sd(column)^4)) -3
return(kurt)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
kurt <- (((sum(x - mean(x))^4/length(x))/sd(x)^4))-3
return(kurt)
}
}
kurtosis(x)
x
x <- rnorm(66,0,1)
kurtosis(x)
kurtosis(balance_df$Pre_Proprio)
kurtosis <- function(x, na.rm = FALSE){
if(is.data.frame(x)|| is.matrix(x)){
if(na.rm){
x <- apply(x,2,function(column) column[!is.na(column)])
}
kurt <- apply(x,2,function(column){
kurtosis <- ((sum(column - mean(column))^4/length(column)*sd(column)^4)) -3
return(kurt)
})
}else{
if(na.rm){
x <- x[!is.na(x)]
}
kurt <- ((sum(x - mean(x))^4/length(x)*sd(x)^4))-3
return(kurt)
}
}
kurtosis(x)
kurtosis <- function(x, na.rm = FALSE) {
if (is.data.frame(x) || is.matrix(x)) {
if (na.rm) {
x <- apply(x, 2, function(column) column[!is.na(column)])
}
kurt <- apply(x, 2, function(column) {
n <- length(column)
kurtosis <- (sum((column - mean(column))^4) / (n * sd(column)^4)) - 3
return(kurtosis)
})
} else {
if (na.rm) {
x <- x[!is.na(x)]
}
n <- length(x)
kurt <- (sum((x - mean(x))^4) / (n * sd(x)^4)) - 3
}
return(kurt)
}
kurtosis(x)
skewness <- function(x, na.rm = FALSE) {
if (is.data.frame(x) || is.matrix(x)) {
if (na.rm) {
x <- apply(x, 2, function(column) column[!is.na(column)])
}
skew <- apply(x, 2, function(column) {
n <- length(column)
skewness <- (sum((column - mean(column))^3) / (n * sd(column)^3))
return(skewness)
})
} else {
if (na.rm) {
x <- x[!is.na(x)]
}
n <- length(x)
skew <- (sum((x - mean(x))^3) / (n * sd(x)^3))
}
return(skew)
}
skewness(x)
skewness(balance_df$Pre_Proprio)
skewness(balance_df$zPre_Proprio)
kurtosis(balance_df$Pre_Proprio)
kurtosis(balance_df[,3:19])
skewness(balance_df[,3:19])
var_stats <- as.data.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
}))
View(var_stats)
var_stats <- as.matrix(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
}))
View(var_stats)
View(var_stats)
var_stats
var_stats <- matrix(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
}))
View(var_stats)
var_stats <- data.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
}))
View(var_stats)
t(var_stats)
var_stats <- (tdata.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
})))
var_stats <- t(data.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val))
})))
var_stats <- t(data.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE)  # Calculate mean
skew_val <- skewness(x, na.rm = TRUE)  # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE)  # Calculate kurtosis
return(round(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val),2))
})))
var_stats
mahalanobis(balance_df[,3:17],colMeans(balance_df[,3:17]),cov(balance_df[,3:17]))
