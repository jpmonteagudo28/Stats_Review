setwd("C:/Users/jpmonteagudo/Desktop/R/Review/Data")
balance_df <- read.csv("balance_study.csv", sep = ",", header = TRUE)
balance_df <- balance_df[-c(67:104), ]
names(balance_df)[names(balance_df) == "After_Prorio"] <- "After_Proprio"
str(balance_df) # Checking data frame structure
cols <- c(5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17) # Converting from char to numeric
for (i in cols) {
balance_df[, i] <- round(as.numeric(gsub("%", "", balance_df[, i])), 0)
}
balance_df$Gender <- as.factor(balance_df$Gender)
balance_df$Glasses_FVE <- c(0,1)
print(table(balance_df$Gender)) # 2x more females than males w/ mTBI
print(table(balance_df$Glasses_FVE))
str(balance_df) # Checking data frame structure after reformatting
#------------------------------------------#
# Normality tests (graphical               #
#------------------------------------------#
# Created function to calculate skewness of vars in df
skewness <- function(x, na.rm = FALSE) {
if (is.data.frame(x) || is.matrix(x)) {
if (na.rm) {
x <- apply(x, 2, function(column) column[!is.na(column)])
}
skew <- apply(x, 2, function(column) {
n <- length(column)
skewness <- (sum((column - mean(column))^3) / (n * sd(column)^3))
return(skewness)
})
} else {
if (na.rm) {
x <- x[!is.na(x)]
}
n <- length(x)
skew <- (sum((x - mean(x))^3) / (n * sd(x)^3))
}
return(skew)
}
# Created function to calculate kurtosis of vars in df.
kurtosis <- function(x, na.rm = FALSE) {
if (is.data.frame(x) || is.matrix(x)) {
if (na.rm) {
x <- apply(x, 2, function(column) column[!is.na(column)])
}
kurt <- apply(x, 2, function(column) {
n <- length(column)
kurtosis <- (sum((column - mean(column))^4) / (n * sd(column)^4)) - 3
return(kurtosis)
})
} else {
if (na.rm) {
x <- x[!is.na(x)]
}
n <- length(x)
kurt <- (sum((x - mean(x))^4) / (n * sd(x)^4)) - 3
}
return(kurt)
}
# Creating summary df of vars mean, skew, and kurtosis.
var_stats <- t(data.frame(lapply(balance_df[, -(1:2)], function(x) {
mean_val <- mean(x, na.rm = TRUE) # Calculate mean
skew_val <- skewness(x, na.rm = TRUE) # Calculate skewness
kurt_val <- kurtosis(x, na.rm = TRUE) # Calculate kurtosis
return(round(c(Mean = mean_val, Skewness = skew_val, Kurtosis = kurt_val), 2))
})))
print(var_stats)
# Evaluating distance between data points and vars (Mahalanobis distance & 1-cor)
balance_center <- colMeans(balance_df[, 3:9]) # Calculating center for each var.
balance_cov <- cov(balance_df[, 3:9]) # Calculating cov. for each var
distance <- mahalanobis(balance_df[, 3:9], balance_center, balance_cov)
cutoff <- qchisq(p = .90, df = ncol(balance_df[, 3:9])) # Calculating cutoff point (p = .90, df = 7)
probable_outlier <- balance_df[, 3:9][distance > cutoff, ] # Returning data points > cutoff value
outlier_with_mean <- as.data.frame(rbind(probable_outlier, var_stats[1:7, 1]))
rownames(outlier_with_mean)[nrow(outlier_with_mean)] <- "Mean" # Adding mean to each column of prob. outliers
print(outlier_with_mean) # 12% of sample probable outlier
# id 24 0 scores on pre-treatment measures
cor_dist <- round(as.dist((1 - cor(balance_df[, 3:9] / 2))) * 1000) # Using correlation between vars as distance.
# As correlation gets stronger, distance between vars gets closer
hc <- hclust(cor_dist, "complete") # Representing distance as hierarchical cluster
hc_plot <- ggdendrogram(hc, rotate = FALSE, size = 2)
print(hc_plot)
# Created function to convert percentile scores to z-scores for density plots
standardize <- function(x, ..., na.rm = FALSE) {
if (is.data.frame(x) || is.matrix(x)) {
if (na.rm) {
x <- apply(x, 2, function(column) column[!is.na(column)])
}
z_score <- apply(x, 2, function(column) {
avg <- mean(column)
stdev <- sd(column)
z_score <- (column - avg) / stdev
return(z_score)
})
return(z_score)
} else {
if (na.rm) {
x <- x[!is.na(x)]
}
avg <- mean(x)
stdev <- sd(x)
z_score <- (x - mean(x)) / sd(x)
return(z_score)
}
}
gender_plot <- ggplot(balance_df, aes(Gender, fill = Gender)) +
geom_bar(width = .4) +
scale_fill_hue(c = 40) +
facet_grid(vars(Glasses_FVE)) +
theme_light() +
ggtitle("Barplot showing number of patients (by gender) wearing glasses at start of FVE") +
theme(plot.title = element_text(family = "", face = "italic", color = "black", size = 12))
print(gender_plot)
# Standardizing Cumulative results variable prior to plotting density
balance_df$zPre_Cumul <- standardize(balance_df$Pre_Cumul)
balance_df$zAfter_Cumul <- standardize(balance_df$After_Cumul)
# Plotting standardized pre/after proprioception measurements.
cumul_density <- ggplot(balance_df, aes(zPre_Cumul)) +
geom_density(aes(zPre_Cumul, y = after_stat(density)), fill = "#69b3a2") +
geom_label(aes(3.5, .25, label = "Pre_Cumul"), color = "#69b3a2") +
geom_density(aes(zAfter_Cumul, y = -after_stat(density)), fill = "#404080") +
geom_label(aes(3.5, -.25, label = "After_Cumul"), color = "#404080") +
theme_ipsum() +
xlab("Cumulative measurement before and after FVE") +
theme_light() +
ggtitle("Density plot comparing Cumulative measurements before and after FVE") +
theme(plot.title = element_text(family = "", face = "italic", color = "black", size = 12))
print(cumul_density)
# Created function to display Q-Q plots for numeric variables in df.
QQ_plots <- function(data, cols, show_labels = TRUE) { # labeling y-axis to identify vars
qq_plots <- list()
for (col in cols) { # cols is a vector containing the desired columns
plot <- ggqqplot(data[[col]]) # requires ggpubr, gridExtra and ggplot2
col_name <- colnames(data)[col]
if (show_labels) {
plot <- plot + labs(y = col)
}
qq_plots[[col]] <- plot
}
qq_panel <- do.call(grid.arrange, qq_plots)
return(qq_panel)
}
cols <- colnames(balance_df[,3:13])
print(QQ_plots(balance_df,cols))
# Created function to display histograms for numeric vars in df.
histograms <- function(data, cols) {
hist_plots <- list()
for (col in cols) {
plot <- ggplot(data, aes(x = .data[[col]])) +
geom_histogram(binwidth = 2.5, fill = "#69b3a2", color = "#404080") +
labs(x = col, y = "Frequency") +
theme_minimal()
hist_plots[[col]] <- plot
}
hist_panel <- do.call(grid.arrange, hist_plots)
return(hist_panel)
}
cols <- colnames(balance_df[,3:13])
print(histograms(balance_df,cols))
# Created correlation matrix to assess independence.
corr_matrix <- ggcorrmat(balance_df,
method = "pearson", # Correlation matrix
label = TRUE, # assuming normality
cor.vars = c(
"Age", "months_mTBI", "Pre_Proprio",
"Pre_Visual", "Pre_Vest", "Pre_Cumul",
"weeks_glasses", "After_Proprio",
"After_Visual", "After_Vest", "After_Cumul"
),
title = "Correlation matrix",
size = 2
)
print(corr_matrix)
# Scatterplot matrix
my_cols <- c("#00AFBB", "#E7B800")
panel.cor <- function(x, y){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- round(cor(x, y), digits=2)
txt <- paste0("R = ", r)
cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch = 19, col = my_cols[balance_df$Glasses_FVE], cex = 1.5)
}
pairs(balance_df[,3:8],
upper.panel = upper.panel,
lower.panel = panel.cor)
pairs(balance_df[,c(3,4,10,11,12,13)],
upper.panel = upper.panel,
lower.panel = panel.cor)
#-------------------------------#
# Normality test (numerical)    #
#-------------------------------#
normality_shapiro_test <- data.frame(t(sapply(balance_df[,3:13], shapiro.test))) # Data violates normality assumption
non_normal <- normality_shapiro_test[normality_shapiro_test$p.value <= .05,]; print(non_normal) # Non-normal data
homogeneity_test<- t(sapply(balance_df[,3:13], function(x) bartlett.test(x~Glasses_FVE,balance_df))) # Equal variances assumed
# Visualizing difference in visual measurements in each group
boxplots <- function(data, cols) {
boxplot_plots <- list()
for (col in cols) {
plot <- ggplot(data, aes(x = Glasses_FVE, y = .data[[col]])) +
geom_boxplot(fill = "steelblue", color = "black") +
labs(x = "Wearing glasses at start of FVE", y = col) +
theme_minimal()
boxplot_plots[[col]] <- plot
}
boxplot_panel <- do.call(grid.arrange, boxplot_plots)
return(boxplot_panel)
}
print(boxplots(balance_df,cols))
#----------------------------------------#
# Using QR to assess effect of treatment #
# on patients with and w/o glasses       #
#----------------------------------------#
stacked <- stack(balance_df,select = c("Glasses_FVE","Age","months_mTBI","weeks_glasses","Pre_Cumul","After_Cumul"))
View(stacked)
?rq
View(balance_df)
taus <- c(.15,.25,.50,.75,.90)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + Months_Since_Injury + Weeks_Therapeutic_Glasses,
taus, balance_df, se = "boot",R = 1000))
stacked <- stack(balance_df,select = c("Glasses_FVE","Age","months_mTBI","weeks_glasses","Change_Cumul"))
View(stacked)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = stacked, se = "boot",R = 1000))
View(stacked)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = stacked, se = "boot",R = 1000))
?stack
View(stacked)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df, se = "boot", R = 1000))
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), se = "boot", R = 1000)
qr_test
View(non_normal)
gc()
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau=.50, data = balance_df), se = "boot", R = 1000)
qr_test
emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau=.50, data = balance_df),~Glasses_FVE)
emmeans_model <- emmeas(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), ~Glasses_FVE)
pairs(emmeans_model)
taus <- c(.25,.50,.75,.95)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), se = "boot", R = 1000)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), ~Glasses_FVE)
pairs(emmeans_model)
qr_test
taus <- c(.15,.25,.50,.75,.95)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), ~Glasses_FVE)
emmeans_model
taus <- c(.15,.25,.50,.75,.95)
for(tau in taus){
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), se = "boot", R = 1000)
print(qr_test)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
}
for(tau in taus){
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), se = "boot", R = 3000)
print(qr_test)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
}
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
for(tau in taus){
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
}
summary(rq(Change_Cumul ~ Glasses_FVE + months_mTBI,
taus, data = balance_df), se = "boot", R = 9999)
for(tau in taus){
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
}
View(emmeans_model)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,tau, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,taus, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,tau=.15, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,tau=.15, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
rm(emmeans_model)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,tau=.15, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE,tau=.15, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE,tau=.15, data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE, tau = .50,data = balance_df), ~Glasses_FVE)
print(emmeans_model)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE, tau = .25,data = balance_df), ~Glasses_FVE)
emmeans_model <- emmeans(rq(Change_Cumul ~ Glasses_FVE,data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
emmeans::joint_tests(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
taus, data = balance_df))
emmeans::joint_tests(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses,
tau, data = balance_df))
emmeans::joint_tests(rq(Change_Cumul ~ Glasses_FVE + Age + months_mTBI + weeks_glasses, data = balance_df))
RVAideMemoire::mood.medtest(Change_Cumul ~ Glasses_FVE, data = balance_df)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + months_mTBI + weeks_glasses,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + weeks_glasses,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
taus <- c(.05,.15,.25,.50,.75,.95)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE + Age + weeks_glasses,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
median(balance_df$Pre_Cumul)
median(balance_df$After_Cumul)
mean(balance_df$Pre_Cumul)
mean(balance_df$After_Cumul)
t.test(balance_df$Pre_Cumul,balance_df$After_Cumul, paired = TRUE, alternative = "one.sided")
t.test(balance_df$Pre_Cumul,balance_df$After_Cumul, paired = TRUE, alternative = "greater")
t.test(balance_df$Pre_Cumul,balance_df$After_Cumul, paired = TRUE, alternative = "two.sided")
View(non_normal)
normality_shapiro_test <- data.frame(t(sapply(balance_df[,c(3:13,17)], shapiro.test))) # Data violates normality assumption
non_normal <- normality_shapiro_test[normality_shapiro_test$p.value <= .05,]; print(non_normal) # Non-normal data
homogeneity_test<- t(sapply(balance_df[,c(3:13,17)], function(x) bartlett.test(x~Glasses_FVE,balance_df))
View(homogeneity_test)
View(homogeneity_test)
correlation::cor_test(balance_df$Age,balance_df$Change_Cumul, method = "kendall")
?cor.test
cor.test(balance_df$Age,balance_df$Change_Cumul, method = "kendall")
cor.test(balance_df$weeks_glasses,balance_df$Change_Cumul, method = "kendall")
cor.test(balance_df$months_mTBI,balance_df$Change_Cumul, method = "kendall")
cor.test(balance_df$Gender,balance_df$Change_Cumul, method = "kendall")
cor.test(balance_df$Glasses_FVE,balance_df$Change_Cumul, method = "kendall")
emmeans_model <-  emmeans(rq(Change_Cumul ~ Glasses_FVE, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
pairs(emmeans_model)
corr_matrix <- ggcorrmat(balance_df,
method = "kendall", # Correlation matrix
label = TRUE, # assuming normality
cor.vars = c(
"Age", "months_mTBI", "Pre_Proprio",
"Pre_Visual", "Pre_Vest", "Pre_Cumul",
"weeks_glasses", "After_Proprio",
"After_Visual", "After_Vest", "After_Cumul"
),
title = "Correlation matrix",
size = 2
)
print(corr_matrix)
# Scatterplot matrix
my_cols <- c("#00AFBB", "#E7B800")
panel.cor <- function(x, y){
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- round(cor(x, y,method = "kendall"), digits=2)
txt <- paste0("R = ", r)
cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
# Customize upper panel
upper.panel<-function(x, y){
points(x,y, pch = 19, col = my_cols[balance_df$Glasses_FVE], cex = 1.5)
}
pairs(balance_df[,3:8],
upper.panel = upper.panel,
lower.panel = panel.cor)
pairs(balance_df[,c(3,4,10,11,12,13,17)],
upper.panel = upper.panel,
lower.panel = panel.cor)
#-------------------------------#
gc()
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE+weeks_glasses+Gender,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
qr_test <- summary(rq(Change_Cumul ~ Glasses_FVE+weeks_glasses+Age,
taus, data = balance_df), se = "boot", R = 9999)
print(qr_test)
emmeans_model <-  emmeans(rq(Change_Cumul ~ Glasses_FVE, data = balance_df), ~Glasses_FVE)
print(emmeans_model)
lapply(balance_df, mean)
print(histograms(balance_df,cols))
?wilcox.test
wilcox.test(Change_Cumul ~ Glasses_FVE, balance_df, paired = TRUE, conf.int = TRUE, conf.level = .90)
wilcox.test(balance_df$Pre_Cumul, balance_df$After_Cumul,alternative = "two.sided", paired = TRUE, conf.int = T, conf.level = .90)
median(outer(balance_df$Pre_Cumul,balance_df$After_Cumul,"-"))
layout(matrix(c(1:2), nrow = 2))
hist(balance_df$Pre_Cumul, xlim = c(-20,100))
abline(v = median(balance_df$Pre_Cumul), col = "gold", lwd = 2)
hist(balance_df$After_Cumul, xlim = c(-20,100), col = "steelblue", lwd = 2)
abline(v = median(balance_df$After_Cumul), col ="gold", lwd = 2)
layout(matrix(c(1:4), nrow = 2))
hist(balance_df$Pre_Cumul, xlim = c(-20,100), col = "steelblue", lwd = 2)
abline(v = median(balance_df$Pre_Cumul), col = "gold", lwd = 2)
hist(balance_df$After_Cumul, xlim = c(-20,100), col = "steelblue", lwd = 2)
abline(v = median(balance_df$After_Cumul), col ="gold", lwd = 2)
# Set up the layout and adjust margins
layout(matrix(c(1, 2, 3, 4), nrow = 2))
par(mar = c(5, 4, 2, 1))  # Adjust the margins for the first plot
hist(balance_df$Pre_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2)
abline(v = median(balance_df$Pre_Cumul), col = "gold", lwd = 2)
# Adjust margins for the second plot
par(mar = c(5, 1, 2, 1))  # Adjust the margins for the second plot
hist(balance_df$After_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2)
abline(v = median(balance_df$After_Cumul), col = "gold", lwd = 2)
# Reset the plotting layout and margins
layout(1)
par(mar = c(5, 4, 4, 2))  # Reset the margins to their default values
main("Histogram of Pre-Cumulative Balance measures")
main = "Histogram of Pre-Cumulative Balance measures"
layout(matrix(c(1, 2), nrow = 2))
par(mar = c(5, 4, 2, 1))  # Adjust the margins for the first plot
hist(balance_df$Pre_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2,
main = "Histogram of Pre-Cumulative Balance measures")
abline(v = median(balance_df$Pre_Cumul), col = "gold", lwd = 2)
main = "Histogram of Pre-Cumulative Balance measures"
# Adjust margins for the second plot
par(mar = c(5, 1, 2, 1))  # Adjust the margins for the second plot
hist(balance_df$After_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2,
main = "Histogram of Post-Cumulative Balance measures")
abline(v = median(balance_df$After_Cumul), col = "gold", lwd = 2)
layout(matrix(c(1, 2), nrow = 2))
par(mar = c(5, 4, 2, 1))  # Adjust the margins for the first plot
hist(balance_df$Pre_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2,
main = "Histogram of Pre-Cumulative Balance measures")
abline(v = median(balance_df$Pre_Cumul), col = "gold", lwd = 2) # gold line showing median
main = "Histogram of Pre-Cumulative Balance measures"
par(mar = c(5, 4, 2, 1))  # Adjust the margins for the second plot
hist(balance_df$After_Cumul, xlim = c(-20, 100), col = "steelblue", lwd = 2,
main = "Histogram of Post-Cumulative Balance measures")
abline(v = median(balance_df$After_Cumul), col = "gold", lwd = 2) # gold line showing median
layout(matrix(c(1:4), nrow = 2))
hist(v1, xlim=c(-3, 5))
set.seed(1234)
v1 <- rexp(500)
v2 <- rnorm(500) + log(2)
v3 <- -rgamma(500, 2.5, 3)
v4 <- runif(500, -2,4)
layout(matrix(c(1:4), nrow = 2))
hist(v1, xlim=c(-3, 5))
abline(v = median(v1), col="red", lwd=2)
hist(v2, xlim=c(-3, 5));
abline(v = median(v2), col="red", lwd=2)
hist(v3, xlim=c(-3, 5));
abline(v = median(v3), col="red", lwd=2)
hist(v4, xlim=c(-3, 5));
abline(v = median(v4), col="red", lwd=2)
median(balance_df$Pre_Cumul)- median(balance_df$After_Cumul)
set.seed(1234)
v1 <- rexp(500)
v2 <- rnorm(500) + log(2)
v3 <- -rgamma(500, 2.5, 3)
v4 <- runif(500, -2,4)
layout(matrix(c(1:4), nrow = 2))
hist(v1, xlim=c(-3, 5))
abline(v = median(v1), col="red", lwd=2)
hist(v2, xlim=c(-3, 5));
abline(v = median(v2), col="red", lwd=2)
hist(v3, xlim=c(-3, 5));
abline(v = median(v3), col="red", lwd=2)
hist(v4, xlim=c(-3, 5));
abline(v = median(v4), col="red", lwd=2)
qr_test2 <- summary(rq(Pre_Cumul~After_Cumul, tau = .5, balance_df), se = "boot", R = 9999)
qr_test2
qr_test <- summary(rq(Pre_Cumul~After_Cumul, tau = .5, balance_df), se = "boot", R = 9999)
print(qr_test)
emmeans_mod <- emmeans(rq(Pre_Cumul ~ After_Cumul, tau = .5, balance_df))
?emmeans
emmeans_mod <- emmeans(rq(Pre_Cumul ~ After_Cumul, tau = .5, balance_df), ~Glasses_FVE)
emmeans_model <-  emmeans(rq(Change_Cumul ~ Glasses_FVE, data = balance_df), specs = ~Glasses_FVE)
emmeans_mod <- emmeans(rq(Pre_Cumul ~ After_Cumul, tau = .5, balance_df), ~Glasses_FVE))
emmeans_mod <- emmeans(rq(Pre_Cumul ~ After_Cumul, tau = .5, balance_df), ~Glasses_FVE)
emmeans_mod <- emmeans(rq(Pre_Cumul ~ After_Cumul + Glasses_FVE, tau = .5, balance_df), ~Glasses_FVE)
print(emmeans_mod)
pairs(emmeans_mod)
qr_test <- summary(rq(Pre_Cumul~After_Cumul + Glasses_FVE, tau = .5, balance_df), se = "boot", R = 9999)
print(qr_test)
stacked <- stack(balance_df$Pre_Cumul,balance_df$After_Cumul)
?stack
length(balance_df$Pre_Cumul)
length(balance_df$After_Cumul)
stacked <- stack(data.frame(balance_df$Pre_Cumul,balance_df$After_Cumul))
View(stacked)
qr_test <- summary(rq(values~ind, tau = .5, data = stacked), se = "boot", R = 9999)
print(qr_test)
emmeans_mod <- emmeans(rq(values~ind, tau = .5, data = stacked), ~ind)
print(emmeans_mod)
pairs(emmeans_mod)
taus <- c(.05,.15,.25,.50,.75,.95)
qr_test <- summary(rq(values~ind, taus, data = stacked), se = "boot", R = 9999)
print(qr_test)
